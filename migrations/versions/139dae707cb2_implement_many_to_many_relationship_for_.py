"""Implement many-to-many relationship for tags

Revision ID: 139dae707cb2
Revises: 
Create Date: 2025-09-11 16:20:59.227485

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '139dae707cb2'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('tag',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('test_case_tags',
    sa.Column('test_case_id', sa.Integer(), nullable=False),
    sa.Column('tag_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['tag_id'], ['tag.id'], ),
    sa.ForeignKeyConstraint(['test_case_id'], ['test_case.id'], ),
    sa.PrimaryKeyConstraint('test_case_id', 'tag_id')
    )
    with op.batch_alter_table('test_case', schema=None) as batch_op:
        batch_op.drop_column('tags')

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('test_case', schema=None) as batch_op:
        batch_op.add_column(sa.Column('tags', sa.TEXT(), nullable=True))

    op.drop_table('test_case_tags')
    op.drop_table('tag')
    # ### end Alembic commands ###
